"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/DataGrid.tsx":
/*!*************************************!*\
  !*** ./src/components/DataGrid.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DataGrid: () => (/* binding */ DataGrid)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.1.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@15.1.0_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ DataGrid auto */ \nvar _s = $RefreshSig$();\n\nfunction DataGrid(param) {\n    let { data, onUpdateCell, onDeleteRow } = param;\n    _s();\n    const [localData, setLocalData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(data);\n    const [editCell, setEditCell] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [editValue, setEditValue] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)('');\n    const pendingUpdates = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(new Set());\n    // Update local data when server data changes and no pending updates\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"DataGrid.useEffect\": ()=>{\n            if (pendingUpdates.current.size === 0) {\n                setLocalData(data);\n            }\n        }\n    }[\"DataGrid.useEffect\"], [\n        data\n    ]);\n    const columns = Object.keys(localData[0] || {}).filter((key)=>key !== 'id');\n    const handleDoubleClick = (id, field, value)=>{\n        setEditCell({\n            id,\n            field\n        });\n        setEditValue(String(value));\n    };\n    const handleUpdate = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"DataGrid.useCallback[handleUpdate]\": async ()=>{\n            if (!editCell) return;\n            const { id, field } = editCell;\n            const value = editValue;\n            const updateKey = \"\".concat(id, \"-\").concat(field);\n            // Clear edit state immediately\n            setEditCell(null);\n            // Update local state synchronously\n            const newData = localData.map({\n                \"DataGrid.useCallback[handleUpdate].newData\": (row)=>row.id === id ? {\n                        ...row,\n                        [field]: value\n                    } : row\n            }[\"DataGrid.useCallback[handleUpdate].newData\"]);\n            setLocalData(newData);\n            // Track this update as pending\n            pendingUpdates.current.add(updateKey);\n            try {\n                await onUpdateCell(id, field, value);\n            } catch (error) {\n                // Revert on error\n                setLocalData({\n                    \"DataGrid.useCallback[handleUpdate]\": (prev)=>prev.map({\n                            \"DataGrid.useCallback[handleUpdate]\": (row)=>{\n                                var _data_find;\n                                return row.id === id ? {\n                                    ...row,\n                                    [field]: (_data_find = data.find({\n                                        \"DataGrid.useCallback[handleUpdate]\": (r)=>r.id === id\n                                    }[\"DataGrid.useCallback[handleUpdate]\"])) === null || _data_find === void 0 ? void 0 : _data_find[field]\n                                } : row;\n                            }\n                        }[\"DataGrid.useCallback[handleUpdate]\"])\n                }[\"DataGrid.useCallback[handleUpdate]\"]);\n                alert('Failed to update cell');\n            } finally{\n                pendingUpdates.current.delete(updateKey);\n            }\n        }\n    }[\"DataGrid.useCallback[handleUpdate]\"], [\n        editCell,\n        editValue,\n        localData,\n        data,\n        onUpdateCell\n    ]);\n    const handleKeyDown = (e)=>{\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            handleUpdate();\n        }\n    };\n    const handleDelete = async (id)=>{\n        const deleteKey = \"delete-\".concat(id);\n        // Update local state synchronously\n        const newData = localData.filter((row)=>row.id !== id);\n        setLocalData(newData);\n        // Track this delete as pending\n        pendingUpdates.current.add(deleteKey);\n        try {\n            await onDeleteRow(id);\n        } catch (error) {\n            // Revert on error\n            setLocalData(data);\n            alert('Failed to delete row');\n        } finally{\n            pendingUpdates.current.delete(deleteKey);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"overflow-x-auto\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"table\", {\n            className: \"min-w-full border-collapse\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"thead\", {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                        children: [\n                            columns.map((column)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                    className: \"border p-2 bg-gray-50\",\n                                    children: column\n                                }, column, false, {\n                                    fileName: \"/Users/apeng/Documents/GitHub/s2-drizzle-orm-driver-demo/src/components/DataGrid.tsx\",\n                                    lineNumber: 97,\n                                    columnNumber: 15\n                                }, this)),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"th\", {\n                                className: \"border p-2 bg-gray-50\",\n                                children: \"Actions\"\n                            }, void 0, false, {\n                                fileName: \"/Users/apeng/Documents/GitHub/s2-drizzle-orm-driver-demo/src/components/DataGrid.tsx\",\n                                lineNumber: 101,\n                                columnNumber: 13\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/apeng/Documents/GitHub/s2-drizzle-orm-driver-demo/src/components/DataGrid.tsx\",\n                        lineNumber: 95,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/apeng/Documents/GitHub/s2-drizzle-orm-driver-demo/src/components/DataGrid.tsx\",\n                    lineNumber: 94,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tbody\", {\n                    children: localData.map((row)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"tr\", {\n                            children: [\n                                columns.map((column)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                        className: \"border p-2\",\n                                        onDoubleClick: ()=>handleDoubleClick(row.id, column, row[column]),\n                                        children: (editCell === null || editCell === void 0 ? void 0 : editCell.id) === row.id && (editCell === null || editCell === void 0 ? void 0 : editCell.field) === column ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                            type: column === 'age' ? 'number' : 'text',\n                                            value: editValue,\n                                            onChange: (e)=>setEditValue(e.target.value),\n                                            onBlur: handleUpdate,\n                                            onKeyDown: handleKeyDown,\n                                            autoFocus: true,\n                                            className: \"w-full p-1 border rounded\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/apeng/Documents/GitHub/s2-drizzle-orm-driver-demo/src/components/DataGrid.tsx\",\n                                            lineNumber: 114,\n                                            columnNumber: 21\n                                        }, this) : row[column]\n                                    }, \"\".concat(row.id, \"-\").concat(column), false, {\n                                        fileName: \"/Users/apeng/Documents/GitHub/s2-drizzle-orm-driver-demo/src/components/DataGrid.tsx\",\n                                        lineNumber: 108,\n                                        columnNumber: 17\n                                    }, this)),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"td\", {\n                                    className: \"border p-2\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                        onClick: ()=>handleDelete(row.id),\n                                        className: \"text-red-600 hover:text-red-800\",\n                                        children: \"Delete\"\n                                    }, void 0, false, {\n                                        fileName: \"/Users/apeng/Documents/GitHub/s2-drizzle-orm-driver-demo/src/components/DataGrid.tsx\",\n                                        lineNumber: 129,\n                                        columnNumber: 17\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/apeng/Documents/GitHub/s2-drizzle-orm-driver-demo/src/components/DataGrid.tsx\",\n                                    lineNumber: 128,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, row.id, true, {\n                            fileName: \"/Users/apeng/Documents/GitHub/s2-drizzle-orm-driver-demo/src/components/DataGrid.tsx\",\n                            lineNumber: 106,\n                            columnNumber: 13\n                        }, this))\n                }, void 0, false, {\n                    fileName: \"/Users/apeng/Documents/GitHub/s2-drizzle-orm-driver-demo/src/components/DataGrid.tsx\",\n                    lineNumber: 104,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/apeng/Documents/GitHub/s2-drizzle-orm-driver-demo/src/components/DataGrid.tsx\",\n            lineNumber: 93,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/apeng/Documents/GitHub/s2-drizzle-orm-driver-demo/src/components/DataGrid.tsx\",\n        lineNumber: 92,\n        columnNumber: 5\n    }, this);\n}\n_s(DataGrid, \"+0QGdPIbzgtG9RR0am4OrsxIAd8=\");\n_c = DataGrid;\nvar _c;\n$RefreshReg$(_c, \"DataGrid\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/DataGrid.tsx\n"));

/***/ })

});